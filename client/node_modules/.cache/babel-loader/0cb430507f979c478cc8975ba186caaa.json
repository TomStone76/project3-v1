{"ast":null,"code":"import _defineProperty from \"/Users/tomstone/Desktop/JobPost/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tomstone/Desktop/JobPost/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tomstone/Desktop/JobPost/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tomstone/Desktop/JobPost/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tomstone/Desktop/JobPost/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tomstone/Desktop/JobPost/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tomstone/Desktop/JobPost/client/src/pages/Jobs.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, Timeframe, FormBtn, Dropdown } from \"../components/Form\";\nimport { Listings } from \"./Listings\";\n\nvar Jobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jobs, _Component);\n\n  function Jobs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Jobs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Jobs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobList: [],\n      jobType: \"\",\n      location: \"\",\n      description: \"\",\n      timeframe: \"\"\n    };\n\n    _this.loadJobs = function () {\n      API.getJobs().then(function (res) {\n        return _this.setState({\n          jobList: res.data,\n          jobType: \"\",\n          location: \"\",\n          description: \"\",\n          timeframe: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteJob = function (id) {\n      API.deleteJob(id).then(function (res) {\n        return _this.loadJobs();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.jobType) {\n        API.saveJob({\n          jobType: _this.state.jobType,\n          location: _this.state.location,\n          description: _this.state.description,\n          timeframe: _this.state.timeframe\n        }).then(function (res) {\n          return _this.loadJobs();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Jobs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadJobs();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Post A Job\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        value: this.state.jobType,\n        onChange: this.handleInputChange,\n        name: \"jobType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.location,\n        onChange: this.handleInputChange,\n        name: \"location\",\n        placeholder: \"Valid address (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        name: \"description\",\n        placeholder: \"Job description (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Timeframe, {\n        value: this.state.timeframe,\n        onChange: this.handleInputChange,\n        name: \"timeframe\",\n        placeholder: \"How soon do you need it done? (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(FormBtn // disabled={!(this.state.author && this.state.title)}\n      , {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Submit Job\")))));\n    }\n  }]);\n\n  return Jobs;\n}(Component);\n\nexport default Jobs;","map":{"version":3,"sources":["/Users/tomstone/Desktop/JobPost/client/src/pages/Jobs.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","Timeframe","FormBtn","Dropdown","Listings","Jobs","state","jobList","jobType","location","description","timeframe","loadJobs","getJobs","then","res","setState","data","catch","err","console","log","deleteJob","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveJob"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, Timeframe, FormBtn, Dropdown } from \"../components/Form\";\nimport { Listings } from \"./Listings\"\n\nclass Jobs extends Component {\n  state = {\n    jobList: [],\n    jobType: \"\",\n    location: \"\",\n    description: \"\",\n    timeframe: \"\"\n  };\n\n  componentDidMount() {\n    this.loadJobs();\n  }\n\n  loadJobs = () => {\n    API.getJobs()\n      .then(res =>\n        this.setState({ jobList: res.data, jobType: \"\", location: \"\", description: \"\", timeframe: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteJob = id => {\n    API.deleteJob(id)\n      .then(res => this.loadJobs())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.jobType) {\n      API.saveJob({\n        jobType: this.state.jobType,\n        location: this.state.location,\n        description: this.state.description,\n        timeframe: this.state.timeframe\n      })\n      \n        .then(res => this.loadJobs())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Post A Job</h1>\n            </Jumbotron>\n            <form>\n              <Dropdown\n                value={this.state.jobType}\n                onChange={this.handleInputChange}\n                name=\"jobType\"\n              />\n              <Input\n                value={this.state.location}\n                onChange={this.handleInputChange}\n                name=\"location\"\n                placeholder=\"Valid address (required)\"\n              />\n              <TextArea\n                value={this.state.description}\n                onChange={this.handleInputChange}\n                name=\"description\"\n                placeholder=\"Job description (required)\"\n              />\n              <Timeframe\n                value={this.state.timeframe}\n                onChange={this.handleInputChange}\n                name=\"timeframe\"\n                placeholder=\"How soon do you need it done? (required)\"\n              />\n              <FormBtn\n                // disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Job\n              </FormBtn>\n            </form>\n          </Col>\n          {/* <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Available Jobs</h1>\n              </Jumbotron>\n            {this.state.jobList.length ? (\n              <List>\n                {this.state.jobList.map(job => (\n                  <ListItem key={job._id}>\n                    <Link to={\"/jobs/\" + job._id}>\n                      <strong>\n                        {job.jobType}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteJob(job._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col> */}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}